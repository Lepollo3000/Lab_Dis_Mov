@page "/video"

@using PRUEBA.Client.Components

<div class="row pt-5">
    <div class="col-xl-4 col-lg-6">
        <div class="jumbotron p-4">
            <Cameras CameraChanged="OnCameraChanged" />

            <h5><i class="fas fa-video"></i> Canales</h5>

            <div class="list-group">
                <AuthorizeView Roles="Administrador">
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        <div class="input-group">
                            <input type="text" class="form-control form-control-lg"
                                   placeholder="Nobre del canal" aria-label="Nombre del canal" disabled="@(_activeCamera is null)"
                                   @bind="_roomName" @onkeydown="@(async args => await TryAddRoom(args))" />

                            <div class="input-group-append">
                                <button class="btn btn-lg twilio-btn-red"
                                        disabled="@(_activeCamera is null || _roomName is null)"
                                        @onclick="@(async args => await TryAddRoom(args))">
                                    <i class="far fa-plus-square" aria-label="Create room"></i> Crear
                                </button>
                            </div>
                        </div>
                    </div>
                </AuthorizeView>

                @if (!(_rooms?.Any() ?? false))
                {
                    <AuthorizeView Roles="Administrador">
                        <div class="list-group-item d-flex justify-content-between align-items-center">
                            <p class="lead mb-0">
                                Si eres un administrador, agrega un canal para empezar. Los demás participantes podrán ingresar.
                            </p>
                        </div>
                    </AuthorizeView>
                }
                else
                {
                    @foreach (var room in _rooms!)
                    {
                        <button class="list-group-item list-group-item-action d-flex justify-content-between align-items-center
                            @* @(room.Name == _activeRoom ? "active" : null) *@"
                            @onclick="@(async _ => await TryJoinRoom(room.Name))">
                            @room.Name

                            <span class="badge badge-secondary badge-pill">
                                @($"{room.ParticipantCount} / {room.MaxParticipants}")
                            </span>
                        </button>
                    }
                }

                @if (_activeRoom != null)
                {
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        <button class="btn btn-lg btn-danger w-100" @onclick="@(async _ => await OnLeaveRoom())">Abandonar Canal</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col">
        <div id="participants" class="participants-grid">
            <div class="embed-responsive embed-responsive-16by9">
                <div id="camera" class="embed-responsive-item"></div>
            </div>
        </div>
    </div>
</div>
